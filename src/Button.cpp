#include "../inc/Debug.h"
#include "../inc/Button.h"

/*###########################################################################################################################################*/
/*
 *
 *     CONSTRUCTORS
 *
 */
/*###########################################################################################################################################*/
Button::Button(const char* topic, uint8_t pin_number, void (*ISR_Button)() ) :
    Device(topic), _pinNumber(pin_number)
{
    pinMode(_pinNumber, INPUT);

    // we will use isr approach
    attachInterrupt(digitalPinToInterrupt(_pinNumber), ISR_Button, CHANGE);
}

/*###########################################################################################################################################*/
/*
 *
 *     PUBLIC methods
 *
 */
/*###########################################################################################################################################*/
void Button::Pressed()
{
    _buttonState = true;
}
void Button::Reset(){
    _buttonState = false;
}

/* return single LED state as String */
String Button::Get_Current_State(){
    return String("{\"button\": \"") + String(_buttonState) + "\"}";
}


/*###########################################################################################################################################*/
/*
 *
 *     PRIVATE methods
 *
 */
/*###########################################################################################################################################*/

